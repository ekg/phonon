#!/bin/bash

# Phonon - Main orchestrator
# Author: Erik Garrison <erik.garrison@gmail.com>

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
FERMION="$SCRIPT_DIR/fermion/target/release/fermion"
BOSON="$SCRIPT_DIR/boson/boson.js"
PATTERN_FILE="$SCRIPT_DIR/patterns.phonon"

# Load config if it exists
if [ -f "$SCRIPT_DIR/phonon.config" ]; then
    source "$SCRIPT_DIR/phonon.config"
fi

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
NC='\033[0m' # No Color

banner() {
    echo -e "${PURPLE}"
    cat << "EOF"
    ____  __                          
   / __ \/ /_  ____  ____  ____  ____ 
  / /_/ / __ \/ __ \/ __ \/ __ \/ __ \
 / ____/ / / / /_/ / / / / /_/ / / / /
/_/   /_/ /_/\____/_/ /_/\____/_/ /_/ 
                                       
EOF
    echo -e "${NC}"
    echo -e "${BLUE}Quantum Audio Synthesis System${NC}"
    echo -e "Author: Erik Garrison"
    echo ""
}

build_fermion() {
    echo -e "${YELLOW}Building Fermion synthesis engine...${NC}"
    cd "$SCRIPT_DIR/fermion"
    
    if cargo build --release 2>&1 | grep -q "Finished"; then
        echo -e "${GREEN}✓ Fermion built successfully${NC}"
        return 0
    else
        echo -e "${RED}✗ Failed to build Fermion${NC}"
        return 1
    fi
}

start_fermion() {
    echo -e "${YELLOW}Starting Fermion...${NC}"
    "$FERMION" serve --port 57120 &
    FERMION_PID=$!
    sleep 1
    
    if ps -p $FERMION_PID > /dev/null; then
        echo -e "${GREEN}✓ Fermion running (PID: $FERMION_PID)${NC}"
        return 0
    else
        echo -e "${RED}✗ Fermion failed to start${NC}"
        return 1
    fi
}

start_boson() {
    echo -e "${YELLOW}Starting Boson...${NC}"
    cd "$SCRIPT_DIR/boson"
    # Use BPM environment variable if set, otherwise default to 120
    BPM_ARG=""
    if [ ! -z "$BPM" ]; then
        BPM_ARG="--bpm $BPM"
    fi
    node boson-real.js watch "../patterns.phonon" $BPM_ARG &
    BOSON_PID=$!
    sleep 1
    
    if ps -p $BOSON_PID > /dev/null; then
        echo -e "${GREEN}✓ Boson running (PID: $BOSON_PID)${NC}"
        return 0
    else
        echo -e "${RED}✗ Boson failed to start${NC}"
        return 1
    fi
}

stop_all() {
    echo -e "${YELLOW}Stopping all components...${NC}"
    
    if [ ! -z "$FERMION_PID" ]; then
        kill $FERMION_PID 2>/dev/null
        echo -e "${GREEN}✓ Fermion stopped${NC}"
    fi
    
    if [ ! -z "$BOSON_PID" ]; then
        kill $BOSON_PID 2>/dev/null
        echo -e "${GREEN}✓ Boson stopped${NC}"
    fi
    
    # Kill any remaining processes
    pkill -f fermion 2>/dev/null
    pkill -f boson 2>/dev/null
}

test_audio() {
    echo -e "${YELLOW}Testing audio system...${NC}"
    
    # Build if needed
    if [ ! -f "$FERMION" ]; then
        build_fermion || exit 1
    fi
    
    # Test sound
    "$FERMION" test 440 1
    
    echo -e "${GREEN}✓ Audio test complete${NC}"
}

edit_patterns() {
    if [ ! -f "$PATTERN_FILE" ]; then
        cat > "$PATTERN_FILE" << 'EOF'
// Phonon Pattern File
// Edit and save to hear changes!

// C major scale
"261.63 293.66 329.63 349.23 392 440 493.88 523.25"

// Available patterns:
// "440 550 660 550"  // Simple melody
// "60 ~ 200 ~"        // Drum pattern (~ = rest)
// "c3 e3 g3 c4"       // Note names
EOF
    fi
    
    ${EDITOR:-nano} "$PATTERN_FILE"
}

case "${1:-}" in
    start)
        banner
        
        # Kill any existing instances first
        echo -e "${YELLOW}Checking for existing instances...${NC}"
        pkill -f "fermion serve" 2>/dev/null && echo -e "${GREEN}✓ Stopped existing Fermion${NC}"
        pkill -f "boson.js watch" 2>/dev/null && echo -e "${GREEN}✓ Stopped existing Boson${NC}"
        sleep 1
        
        # Check/build Fermion
        if [ ! -f "$FERMION" ]; then
            build_fermion || exit 1
        fi
        
        # Start components
        start_fermion || exit 1
        start_boson || exit 1
        
        echo ""
        echo -e "${GREEN}System ready!${NC}"
        echo -e "BPM: ${BLUE}${BPM:-120}${NC} (edit phonon.config to change)"
        echo -e "Edit ${BLUE}patterns.phonon${NC} to make music"
        echo -e "Press ${YELLOW}Ctrl+C${NC} to stop"
        echo ""
        
        # Wait for interrupt
        trap stop_all INT
        wait
        ;;
        
    test)
        banner
        test_audio
        ;;
        
    edit)
        edit_patterns
        ;;
        
    build)
        banner
        build_fermion
        ;;
        
    stop)
        stop_all
        ;;
    
    clean|kill)
        echo -e "${YELLOW}Killing all Phonon processes...${NC}"
        pkill -f "fermion" 2>/dev/null && echo -e "${GREEN}✓ Killed Fermion processes${NC}"
        pkill -f "boson" 2>/dev/null && echo -e "${GREEN}✓ Killed Boson processes${NC}"
        pkill -f "node.*boson" 2>/dev/null && echo -e "${GREEN}✓ Killed Node processes${NC}"
        echo -e "${GREEN}All Phonon processes terminated${NC}"
        ;;
        
    *)
        banner
        echo "Usage: $0 {start|test|edit|build|stop|clean}"
        echo ""
        echo "  start  - Start the complete system"
        echo "  test   - Test audio output"
        echo "  edit   - Edit pattern file"
        echo "  build  - Build Fermion engine"
        echo "  stop   - Stop all components"
        echo "  clean  - Kill all Phonon processes"
        echo ""
        exit 1
        ;;
esac